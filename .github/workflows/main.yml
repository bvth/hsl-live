# Workflow name
name: Production deployment

# Set environment variables from repository secrets
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  NEXT_PUBLIC_DIGITRANSIT_SUBSCRIPTION_KEY: ${{ secrets.NEXT_PUBLIC_DIGITRANSIT_SUBSCRIPTION_KEY }}
  NEXT_PUBLIC_DIGITRANSIT_API_URL: https://api.digitransit.fi/routing/v2/hsl/gtfs/v1

# Trigger workflow on push to main branch or pull requests to main branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  # Test job: runs tests, linting
  test:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository code
      - uses: actions/checkout@v3

      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      # Install project dependencies
      - name: Install dependencies
        run: npm ci

      # Run ESLint to check code quality
      - name: Run linter
        run: npm run lint

      # Run unit tests
      - name: Run tests
        run: npm test

      - name: Build project
        run: npm run build

      - name: Build project
        run: npm run build

  # Deploy job: deploys to Vercel if tests pass and we're on main branch
  deploy:
    environment: Production
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      # Deploy to Vercel production environment
      - uses: actions/checkout@v3

      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      # Install the latest version of Vercel CLI globally for deployment
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      # Fetch environment variables and project settings from Vercel
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      # Build the project using Vercel's build system
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      # Deploy the pre-built artifacts to Vercel's production environment
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
